<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="Microsoft.MSBuild.LockFile.Tasks.LockFileToMSBuild2" AssemblyFile="$(MSBuildThisFileDirectory)bin\Debug\Microsoft.MSBuild.LockFile.Tasks.dll" />

  <PropertyGroup Condition="'$(ProjectLockFile)' == ''">
    <_ProjectSpecificProjectJsonFile>$(MSBuildProjectName).project.json</_ProjectSpecificProjectJsonFile>
    <ProjectLockFile Condition="Exists('$(_ProjectSpecificProjectJsonFile)')">$(MSBuildProjectName).project.lock.json</ProjectLockFile>
    <ProjectLockFile Condition="!Exists('$(_ProjectSpecificProjectJsonFile)')">project.lock.json</ProjectLockFile>

  </PropertyGroup>

  <!-- Add Targets to Dependency Lists, causing them to be triggered -->
  <PropertyGroup>
    <!-- Turn off NuGet Task -->
    <ResolveNuGetPackages>false</ResolveNuGetPackages>

    <!-- Flag LockFile Tasks -->
    <EnableLockFileToMSBuild Condition="'$(EnableLockFileToMSBuild)' == '' and '$(MSBuildProjectExtension)' != '.xproj'">true</EnableLockFileToMSBuild>

    <ResolveAssemblyReferencesDependsOn>$(ResolveAssemblyReferencesDependsOn);LockFileResolveReferences</ResolveAssemblyReferencesDependsOn>
    <PrepareResourcesDependsOn>LockFileResolveReferences;$(PrepareResourcesDependsOn)</PrepareResourcesDependsOn>
    <_FindDependencies>false</_FindDependencies>
  </PropertyGroup>

  <!--<PropertyGroup>
    <PrepareForRunDependsOn>
      ClearCopyLocalIfBuild;
      $(PrepareForRunDependsOn)
    </PrepareForRunDependsOn>
  </PropertyGroup>-->

  <!-- If a NuGetRuntimeIdentifier wasn't already specified, let's go generate it -->
  <PropertyGroup Condition="'$(NuGetRuntimeIdentifier)' == ''">
    <NuGetRuntimeIdentifier>$(_NuGetRuntimeIdentifierWithoutAot)</NuGetRuntimeIdentifier>
    <NuGetRuntimeIdentifier Condition="'$(UseDotNetNativeToolchain)' == 'true'">$(_NuGetRuntimeIdentifierWithoutAot)-aot</NuGetRuntimeIdentifier>
  </PropertyGroup>

  <!-- Turn off -->
  <!--<Target Name="ResolveNuGetPackageAssets" />-->
  <!--<Target Name="ResolveNuGetPackageAssets" />  
  <Target Name="RuntimeImplementationProjectOutputGroup" />
  <Target Name="ComputeNetCoreFrameworkInjectionParameters" />
  <Target Name="InjectNetCoreFramework" />-->
  <!--<Target Name="_CopyFilesMarkedCopyLocal" />-->

  <!-- Condition="'$(EnableLockFileToMSBuild)' == 'true' and Exists('$(ProjectLockFile)')" -->
  <Target Name="LockFileResolveReferences" 
          DependsOnTargets="ComputeReferencesFromNuGetPackages;ComputeAnalyzersFromNuGetPackages;ComputeCopyLocalItems"
          Condition="'$(EnableLockFileToMSBuild)' == 'true' and Exists('$(ProjectLockFile)')">
    
    <Message Text="----[LockFileResolveReferences Called: POST ResolveNuGetPackageAssets]-------------" Importance="high" />
    <Message Text="ResolvedAnalyzers            -&gt;  @(Analyzer)" Importance="high" />
    <Message Text="ResolvedCopyLocalItems       -&gt;  @(ReferenceCopyLocalPaths)" Importance="high" />
    <Message Text="ResolvedReferences           -&gt;  @(_ReferencesFromNuGetPackages)" Importance="high" />
    <Message Text="ReferencedPackages           -&gt;  @(ReferencedNuGetPackages)" Importance="high" />
    <Message Text="ContentItems                 -&gt;  @(_NuGetContentItems)" Importance="high" />
    <Message Text="FileWrites                   -&gt;  @(FileWrites)" Importance="high" />
    <Message Text="Reference                   -&gt;  @(Reference)" Importance="high" />
    <Message Text="----------------------------------------------------------" Importance="high" />
    <Message Text="_ReferencesFromNuGetPackages  -&gt;  @(_ReferencesFromNuGetPackages)" Importance="high" />
    <Message Text="ResolvedCompileFileDefinitions  -&gt;  @(ResolvedCompileFileDefinitions)" Importance="high" />
    <Message Text="----------------------------------------------------------" Importance="high" />

    <!-- Temp: Remove what ResolveNuGetPackageAssets added -->
    <ItemGroup>
      <Reference Remove="@(_ReferencesFromNuGetPackages)" />
    </ItemGroup>
    <Message Text="Reference                   -&gt;  @(Reference)" Importance="high" />
    
    <!-- Add the references we computed -->
    <ItemGroup>
      <Reference Include="@(ResolvedCompileFileDefinitions)" />
    </ItemGroup>
    <Message Text="Reference                   -&gt;  @(Reference)" Importance="high" />
    
    <!-- Add the analyzers we computed -->
    <ItemGroup>
      <Analyzer Include="@(ResolvedAnalyzers)" />
    </ItemGroup>
    <Message Text="ResolvedAnalyzers            -&gt;  @(Analyzer)" Importance="high" />

    <!-- Add the copy local items -->
    <ItemGroup>
      <ReferenceCopyLocalPaths Include="@(AllCopyLocalItems)" />
    </ItemGroup>
    <Message Text="ResolvedCopyLocalItems       -&gt;  @(ReferenceCopyLocalPaths)" Importance="high" />

  </Target>

  <Target Name="ClearCopyLocalIfBuild">
    <ItemGroup>
      <ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" />
      <ReferenceCopyLocalPaths Include="@(RuntimeCopyLocalItems)" />
    </ItemGroup>
  </Target>
  
  <!-- Run the task -->
  <Target Name="RunLockFileToMSBuild">
    <Message Text="     -> (Raising Lock File: ProjectLockFile=$(ProjectLockFile))" Importance="high"/>

    <LockFileToMSBuild2
      ProjectLockFile="$(ProjectLockFile)">

      <Output TaskParameter="TargetDefinitions" ItemName="TargetDefinitions" />
      <Output TaskParameter="PackageDefinitions" ItemName="PackageDefinitions" />
      <Output TaskParameter="FileDefinitions" ItemName="FileDefinitions" />
      <Output TaskParameter="PackageDependencies" ItemName="PackageDependencies" />
      <Output TaskParameter="FileDependencies" ItemName="FileDependencies" />
    </LockFileToMSBuild2>

  </Target>

  <!-- Compute Resolved References -->
  <Target Name="ComputeReferencesFromNuGetPackages" DependsOnTargets="RunLockFileToMSBuild" Returns="ResolvedCompileFileDefinitions">
    <ItemGroup>
      <TFMFileItems Include="@(FileDependencies->WithMetadataValue('ParentTarget', '$(NuGetTargetMoniker)/$(NuGetRuntimeIdentifier)'))" />
      <TFMCompileFileItems Include="@(TFMFileItems->WithMetadataValue('FileGroup', 'CompileTimeAssembly'))" />
      
      <!-- Get corresponding file definitions -->
      <TFMCompileFileDefinitionsEx Include="@(FileDefinitions)" Exclude="@(TFMCompileFileItems)" />
      <TFMCompileFileDefinitions Include="@(FileDefinitions)" Exclude="@(TFMCompileFileDefinitionsEx)" />
      <ResolvedCompileFileDefinitions Include="%(TFMCompileFileDefinitions.ResolvedPath)">
        <Private>false</Private>
        <NuGetIsFrameworkReference>false</NuGetIsFrameworkReference>
        <NuGetSourceType>Package</NuGetSourceType>
      </ResolvedCompileFileDefinitions>

    </ItemGroup>
  </Target>

  <!-- Compute Resolved Analyzers -->
  <Target Name="ComputeAnalyzersFromNuGetPackages" DependsOnTargets="RunLockFileToMSBuild" Returns="ResolvedAnalyzers">
    <ItemGroup>
      <TFMFileItems Include="@(FileDependencies->WithMetadataValue('ParentTarget', '$(NuGetTargetMoniker)/$(NuGetRuntimeIdentifier)'))" />
      <TFMAnalyzerFileItems Include="@(TFMFileItems->WithMetadataValue('Analyzer', 'true'))" />

      <!-- Get corresponding file definitions -->
      <TFMCompileFileDefinitionsEx Include="@(FileDefinitions)" Exclude="@(TFMAnalyzerFileItems)" />
      <TFMCompileFileDefinitions Include="@(FileDefinitions)" Exclude="@(TFMCompileFileDefinitionsEx)" />
      <!--<ResolvedAnalyzers Include="%(TFMCompileFileDefinitions.ResolvedPath)" />-->

      <AnalyzerFiles Include="@(FileDefinitions->WithMetadataValue('Analyzer', 'true'))" />
      <ResolvedAnalyzers Include="%(AnalyzerFiles.ResolvedPath)" />
      
    </ItemGroup>
    <Message Text="AnalyzerFiles -&gt;  @(AnalyzerFiles)" Importance="high" />
  </Target>

  <!-- Compute CopyLocal -->
  <Target Name="ComputeCopyLocalItems" 
          DependsOnTargets="RunLockFileToMSBuild" 
          Returns="NativeCopyLocalItems;RuntimeCopyLocalItems;ResourceCopyLocalItems;AllCopyLocalItems">
    <ItemGroup>
      <TFMFileItems Include="@(FileDependencies->WithMetadataValue('ParentTarget', '$(NuGetTargetMoniker)/$(NuGetRuntimeIdentifier)'))" />
      
      <!--NativeLibrary-->
      <_NativeFileItems Include="@(TFMFileItems->WithMetadataValue('FileGroup', 'NativeLibrary'))" />
      <__NativeCopyLocalItems Include="@(FileDefinitions)" Exclude="@(_NativeFileItems)" />
      <_NativeCopyLocalItems Include="@(FileDefinitions)" Exclude="@(__NativeCopyLocalItems)" />
      <NativeCopyLocalItems Include="%(_NativeCopyLocalItems.ResolvedPath)" />

      <!--RuntimeAssembly-->
      <_RuntimeFileItems Include="@(TFMFileItems->WithMetadataValue('FileGroup', 'RuntimeAssembly'))" />
      <__RuntimeCopyLocalItems Include="@(FileDefinitions)" Exclude="@(_RuntimeFileItems)" />
      <_RuntimeCopyLocalItems Include="@(FileDefinitions)" Exclude="@(__RuntimeCopyLocalItems)" />
      <RuntimeCopyLocalItems Include="%(_RuntimeCopyLocalItems.ResolvedPath)" />

      <!--ResourceAssembly-->
      <_ResourceFileItems Include="@(TFMFileItems->WithMetadataValue('FileGroup', 'ResourceAssembly'))" />
      <__ResourceCopyLocalItems Include="@(FileDefinitions)" Exclude="@(_ResourceFileItems)" />
      <_ResourceCopyLocalItems Include="@(FileDefinitions)" Exclude="@(__ResourceCopyLocalItems)" />
      <ResourceCopyLocalItems Include="%(_ResourceCopyLocalItems.ResolvedPath)" />

      <!-- ALL -->
      <AllCopyLocalItems Include="@(NativeCopyLocalItems);@(RuntimeCopyLocalItems);@(ResourceCopyLocalItems)">
        <Private>false</Private>
        <NuGetIsFrameworkReference>false</NuGetIsFrameworkReference>
        <NuGetSourceType>Package</NuGetSourceType>
      </AllCopyLocalItems>
      
    </ItemGroup>
  </Target>
</Project>